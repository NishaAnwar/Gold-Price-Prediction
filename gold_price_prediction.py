# -*- coding: utf-8 -*-
"""Gold_Price_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sI1s6lNr6nLuOSetbILheQ_MaIT-w1Sl
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics
#

data=pd.read_csv('gld_price_data.csv')
data.head()

data.info()

data.isnull().sum()#Check for data cleaning purposes

data.tail() #We have data untill 2018

data.shape

#Getting the statistical measures of the data
data.describe()

data['Date'] = pd.to_datetime(data['Date'])
corelation=data.corr()

plt.figure(figsize=(8,8))
sns.heatmap(corelation,cbar=True,square=True,fmt='.1f',annot=True,annot_kws={'size':8},cmap='Blues')

#correlation values of Gold
print(corelation['GLD'])

#Cheking the distribution of Gold Price
sns.distplot(data['GLD'],color='green')
#

"""# **Splitting the Fetures and Target**"""

X=data.drop(['Date','GLD'],axis=1)
Y=data['GLD']

print(X)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

#Model
model=RandomForestRegressor(n_estimators=100)

"""# **Model Training**"""

#Training model
model.fit(X_train,Y_train)

#Let's make Predictions
test_data_prediction=model.predict(X_test)
print(test_data_prediction)

error=metrics.r2_score(Y_test,test_data_prediction)
print('R squared error:',error)

#Comparison between Actual and Predicted Values
Y_test=list(Y_test)
plt.plot(Y_test,color='blue',label='Actual Value')
plt.plot(test_data_prediction,color='green',label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')

Actual_Value=list(Y_test)
Predicted_Value=list(test_data_prediction)
df=pd.DataFrame({'Actual Value':Actual_Value,'Predicted Value':Predicted_Value})
df